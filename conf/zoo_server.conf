location / {
  root html/zoo;
  index index.html;
}

location = /zoo/get {
  content_by_lua_block {
    local api = require "zoo.api"
    local cjson = require "cjson"
    ngx.say(cjson.encode(api.get(ngx.var.arg_znode)))
  }
}

location = /zoo/childrens {
  content_by_lua_block {
    local api = require "zoo.api"
    local cjson = require "cjson"
    ngx.say(cjson.encode(api.childrens(ngx.var.arg_znode)))
  }
}

location = /zoo/set {
  content_by_lua_block {
    local api = require "zoo.api"
    local cjson = require "cjson"
    ngx.say(cjson.encode(api.set(ngx.var.arg_znode, ngx.var.arg_value, ngx.var.arg_version)))
  }
}

location = /zoo/create {
  content_by_lua_block {
    local api = require "zoo.api"
    local cjson = require "cjson"
    ngx.say(cjson.encode(api.create(ngx.var.arg_znode, ngx.var.arg_value)))
  }
}

location = /zoo/delete {
  content_by_lua_block {
    local api = require "zoo.api"
    local cjson = require "cjson"
    ngx.say(cjson.encode(api.delete(ngx.var.arg_znode, ngx.var.arg_recursive)))
  }
}

location = /zoo/tree {
  content_by_lua_block {
    local api = require "zoo.api"
    local cjson = require "cjson"
    ngx.say(cjson.encode(api.tree(ngx.var.arg_znode,
                                  ngx.var.arg_stat and ngx.var.arg_stat:match("[1yY]"))))
  }
}

location = /zoo/import {
  content_by_lua_block {
    local api = require "zoo.api"

    local method = ngx.req.get_method()
    if method ~= "POST" and method ~= "PUT" then
      ngx.exit(ngx.HTTP_BAD_REQUEST)
    end

    local content_type = ngx.req.get_headers().content_type

    if not content_type or content_type:lower() ~= "application/json" then
      ngx.exit(ngx.HTTP_BAD_REQUEST)
    end

    ngx.req.read_body()
    local data = ngx.req.get_body_data()

    local ok, err = api.import(ngx.var.arg_znode or "/", data)
    if ok then
      ngx.say("Imported")
    else
      ngx.say(err)
    end
  }
}