server {
  listen 4444;

  default_type application/json;

  server_name zoo;

  location = /get {
    content_by_lua_block {
      local api = require "zoo.api"
      local cjson = require "cjson"
      ngx.say(cjson.encode(api.get(ngx.var.arg_znode)))
    }
  }

  location = /childrens {
    content_by_lua_block {
      local api = require "zoo.api"
      local cjson = require "cjson"
      ngx.say(cjson.encode(api.childrens(ngx.var.arg_znode)))
    }
  }

  location = /set {
    content_by_lua_block {
      local api = require "zoo.api"
      local cjson = require "cjson"
      ngx.say(cjson.encode(api.set(ngx.var.arg_znode, ngx.var.arg_value, ngx.var.arg_version)))
    }
  }

  location = /create {
    content_by_lua_block {
      local api = require "zoo.api"
      local cjson = require "cjson"
      ngx.say(cjson.encode(api.create(ngx.var.arg_znode, ngx.var.arg_value)))
    }
  }

  location = /delete {
    content_by_lua_block {
      local api = require "zoo.api"
      local cjson = require "cjson"
      ngx.say(cjson.encode(api.delete(ngx.var.arg_znode)))
    }
  }

  location = /tree {
    content_by_lua_block {
      local api = require "zoo.api"
      local cjson = require "cjson"
      ngx.say(cjson.encode(api.tree(ngx.var.arg_znode,
                                    ngx.var.arg_stat and ngx.var.arg_stat:match("[1yY]"))))
    }
  }
}
